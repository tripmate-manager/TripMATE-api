<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tripmate.domain.members.dao.mapper.MemberDAOMapper">
    <insert id="insertMemberInfo" parameterType="MemberDTO">
        <selectKey keyProperty="memberNo" keyColumn="MBR_NO" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO MB_MBR_MGMT (MBR_ID,
                                 MBR_PWD,
                                 MBR_NM,
                                 NICK_NM,
                                 EMAIL,
                                 GEND_CD,
                                 BDAY,
                                 LOGIN_REQ_CNT,
                                 MBR_STATUS_CD,
                                 REG_NO,
                                 REG_DTIME,
                                 UPT_NO,
                                 UPT_DTIME)
        VALUES (#{memberId:VARCHAR},
                password(#{memberPassword:VARCHAR}),
                #{memberName:VARCHAR},
                #{nickName:VARCHAR},
                #{email:VARCHAR},
                #{genderCode:VARCHAR},
                #{birthDay:VARCHAR},
                0,
                #{memberStatusCode:VARCHAR},
                0,
                now(),
                0,
                now());
    </insert>

    <select id="selectDuplicationCnt" parameterType="DuplicationCheckDTO" resultType="int">
        SELECT COUNT(*)
        FROM MB_MBR_MGMT
        <choose>
            <when test="duplicationCheckType != null and '10'.toString() eq duplicationCheckType">
                WHERE MBR_ID = #{duplicationMemberInfo:VARCHAR};
            </when>
            <when test="duplicationCheckType != null and '20'.toString() eq duplicationCheckType">
                WHERE NICK_NM = #{duplicationMemberInfo:VARCHAR};
            </when>
            <otherwise>
                WHERE EMAIL = #{duplicationMemberInfo:VARCHAR};
            </otherwise>
        </choose>
    </select>

    <insert id="insertEmailInfo" parameterType="MemberMailDTO">
        INSERT INTO MB_AUTH_EMAIL_MGMT (MBR_NO,
                                        RECV_EMAIL,
                                        EMAIL_AUTH_KEY,
                                        EMAIL_TP_CD,
                                        REG_NO,
                                        REG_DTIME,
                                        UPT_NO,
                                        UPT_DTIME)
        VALUES ((SELECT MBR_NO FROM MB_MBR_MGMT WHERE MBR_ID = #{memberId:VARCHAR}),
                #{to:VARCHAR},
                #{key:VARCHAR},
                #{mailTypeCode:VARCHAR},
                0,
                now(),
                0,
                now());
    </insert>

    <update id="updateSignUpEmailConfirm" parameterType="MemberMailDTO">
        <selectKey keyProperty="to" keyColumn="EMAIL" resultType="String" order="AFTER">
            SELECT EMAIL
            FROM MB_MBR_MGMT
            WHERE MBR_ID = #{memberId:VARCHAR}
        </selectKey>
        UPDATE MB_MBR_MGMT MMM
            INNER JOIN MB_AUTH_EMAIL_MGMT MAEM
            ON MMM.MBR_NO = MAEM.MBR_NO
        SET <if test="mailTypeCode != null and '10'.toString() eq mailTypeCode">
                MMM.MBR_STATUS_CD = '10',
            </if>
            <if test="mailTypeCode != null and '20'.toString() eq mailTypeCode">
                MMM.EMAIL = MAEM.RECV_EMAIL,
            </if>
            MMM.UPT_NO = MAEM.MBR_NO,
            MMM.UPT_DTIME = now()
        WHERE MAEM.EMAIL_AUTH_KEY = #{key:VARCHAR}
        AND MAEM.EMAIL_TP_CD = #{mailTypeCode:VARCHAR};
    </update>

    <select id="selectSignInMemberInfo" parameterType="SignInDTO" resultType="MemberDTO">
        SELECT MBR_NO AS memberNo,
                MBR_ID AS memberId,
                MBR_PWD AS memberPassword,
                MBR_NM AS memberName,
                NICK_NM AS nickName,
                EMAIL AS email,
                GEND_CD AS genderCode,
                BDAY AS birthDay,
                LOGIN_REQ_CNT AS signInRequestCnt,
                MBR_STATUS_CD AS memberStatusCode
        FROM MB_MBR_MGMT
        WHERE MBR_ID = #{memberId:VARCHAR}
          AND MBR_PWD = password(#{memberPassword:VARCHAR});
    </select>

    <select id="selectSignInRequestCnt" parameterType="SignInDTO" resultType="MemberDTO">
        SELECT MBR_NO AS memberNo,
                LOGIN_REQ_CNT AS signInRequestCnt
        FROM MB_MBR_MGMT
        WHERE MBR_ID = #{memberId:VARCHAR};
    </select>
    
    <update id="updateSignInReqCntAndMbrStatusCd" parameterType="SignInDTO">
        UPDATE MB_MBR_MGMT
        SET LOGIN_REQ_CNT = #{signInRequestCnt:NUMERIC},
        <if test="memberStatusCode != null and '40'.toString() eq memberStatusCode">
            MBR_STATUS_CD = '10',
        </if>
            UPT_NO = 0,
            UPT_DTIME = now()
        WHERE MBR_NO = #{memberNo:NUMERIC};
    </update>

    <select id="selectMbrIdWithMbrNmAndEmail" parameterType="MemberDTO" resultType="String">
        SELECT MBR_ID
        FROM MB_MBR_MGMT
        WHERE MBR_NM = #{memberName:VARCHAR}
          AND EMAIL = #{email:VARCHAR};
    </select>

    <select id="selectMbrNoAndStatusCd" parameterType="MemberMailDTO" resultType="MemberDTO">
        SELECT MBR_NO AS memberNo,
               MBR_STATUS_CD AS memberStatusCode
        FROM MB_MBR_MGMT
        WHERE MBR_ID = #{memberId:VARCHAR}
          AND EMAIL = #{to:VARCHAR};
    </select>

    <update id="updateMbrPwdAndStatusCd" parameterType="MemberDTO">
        UPDATE MB_MBR_MGMT
        SET MBR_PWD = password(#{memberPassword:VARCHAR}),
            MBR_STATUS_CD = '40',
            UPT_NO = #{memberNo:VARCHAR},
            UPT_DTIME = now()
        WHERE MBR_NO = #{memberNo:VARCHAR};
    </update>

    <select id="selectAuthEmailCnt" parameterType="MemberMailDTO" resultType="int">
        SELECT COUNT(*)
        FROM MB_AUTH_EMAIL_MGMT
        WHERE MBR_NO = (SELECT MBR_NO
                        FROM MB_MBR_MGMT
                        WHERE MBR_ID = #{memberId:VARCHAR})
        AND EMAIL_TP_CD = #{mailTypeCode:VARCHAR};
    </select>

    <update id="updateEmailInfo" parameterType="MemberMailDTO">
        UPDATE MB_AUTH_EMAIL_MGMT
        SET EMAIL_AUTH_KEY = #{key:VARCHAR},
            <if test="mailTypeCode != null and '20'.toString() eq mailTypeCode">
                RECV_EMAIL = #{to:VARCHAR},
            </if>
            UPT_NO = (SELECT MBR_NO FROM MB_MBR_MGMT WHERE MBR_ID = #{memberId:VARCHAR}),
            UPT_DTIME = now()
        WHERE MBR_NO = (SELECT MBR_NO FROM MB_MBR_MGMT WHERE MBR_ID = #{memberId:VARCHAR})
        AND EMAIL_TP_CD = #{mailTypeCode:VARCHAR};
    </update>

    <update id="updateMbrPwd" parameterType="ChangePasswordDTO">
        UPDATE MB_MBR_MGMT
        SET MBR_PWD = password(#{newMemberPassword:VARCHAR}),
            UPT_NO = #{memberNo:VARCHAR},
            UPT_DTIME = now()
        WHERE MBR_NO = #{memberNo:VARCHAR};
    </update>

    <update id="updateWithdrawMemberInfo" parameterType="SignInDTO">
        UPDATE MB_MBR_MGMT
        SET MBR_PWD = "",
            MBR_NM = "",
            GEND_CD = "",
            BDAY = "",
            LOGIN_REQ_CNT = 0,
            MBR_STATUS_CD = #{memberStatusCode:VARCHAR},
            UPT_NO = #{memberNo:VARCHAR},
            UPT_DTIME = now()
        WHERE MBR_NO = #{memberNo:VARCHAR};
    </update>

    <select id="selectMemberInfoWithMbrNo" parameterType="int" resultType="MemberDTO">
        SELECT MBR_NO AS memberNo,
               MBR_ID AS memberId,
               MBR_PWD AS memberPassword,
               MBR_NM AS memberName,
               NICK_NM AS nickName,
               EMAIL AS email,
               GEND_CD AS genderCode,
               BDAY AS birthDay,
               LOGIN_REQ_CNT AS signInRequestCnt,
               MBR_STATUS_CD AS memberStatusCode
        FROM MB_MBR_MGMT
        WHERE MBR_NO = #{memberNo:VARCHAR};
    </select>
</mapper>